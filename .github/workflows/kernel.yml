name: Kernel Build CI

on:
  push:

env:
  BOT_MSG_URL: ${{ secrets.TG_BOT_MSG_URL }}
  CHAT_ID: ${{ secrets.TG_CHAT_ID }}
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  bot-notify-ci:
    runs-on: ubuntu-latest

    steps:
    - name: Send message
      run: curl -s -X POST ${{ env.BOT_MSG_URL }} -d chat_id=${{ env.CHAT_ID }} -d "disable_web_page_preview=true" -d "parse_mode=html" -d text="CI kernel build triggered for <b>OnePlus 9 Series</b>"

  build-lemonade-clang:
    needs: [bot-notify-ci]
    runs-on: ubuntu-latest

    steps:
    - name: Setup repo
      run: sudo apt update -y && sudo apt install -y repo elfutils libarchive-tools
    - name: Repo sync
      run: |
        repo init -u https://github.com/mvaisakh/android_kernel_manifest -b eva-oneplus-5.4 --depth=1
        repo sync --no-tags --no-clone-bundle -j$(nproc --all)
    - name: Sync Clang
      run: |
        mkdir -p prebuilts-master/clang/host/linux-x86/clang-r450784d/
        cd prebuilts-master/clang/host/linux-x86/clang-r450784d/
        curl -LO "https://raw.githubusercontent.com/Neutron-Toolchains/antman/main/antman"
        bash antman -S=latest
        bash antman --patch=glibc
    - name: Clang Build
      run: |
        sed -i s/build-user/mvaisakh/g build/_setup_env.sh
        sed -i s/build-host/statixos/g build/_setup_env.sh
        BUILD_CONFIG=kernel/msm-5.4/build.config.msm.lahaina VARIANT=nqgki DEVICE=9P LTO=thin BUILD_KERNEL=1 build/build.sh
    - name: Create zip
      run: |
        cp out/msm-5.4-lahaina-nqgki/dist/Image ak3/
        cat out/msm-5.4-lahaina-nqgki/dist/*.dtb > ak3/dtb
        cp out/msm-5.4-lahaina-nqgki/dist/dtbo.img ak3/
        cd ak3/ && zip -r9 eva-lemonade-$(/bin/date -u '+%d%m%Y%I%M')-clang.zip * -x .git README.md ./*/placeholder
        cd ../
    - uses: actions/upload-artifact@main
      with:
       name: release-zip
       path: ak3/*.zip

  build-lemonade-gcc:
    needs: [bot-notify-ci]
    runs-on: ubuntu-latest

    steps:
    - name: Setup repo
      run: sudo apt update -y && sudo apt install -y repo elfutils
    - name: Repo sync
      run: |
        repo init -u https://github.com/mvaisakh/android_kernel_manifest -b eva-oneplus-5.4 --depth=1
        repo sync --no-tags --no-clone-bundle -j$(nproc --all)
    - name: GCC Build
      run: |
        sed -i s/build-user/mvaisakh/g build/_setup_env.sh
        sed -i s/build-host/statixos/g build/_setup_env.sh
        BUILD_CONFIG=kernel/msm-5.4/build.config.msm.lahaina VARIANT=nqgki DEVICE=9P COMPILER=gcc GCC_LTO=1 BUILD_KERNEL=1 build/build.sh
    - name: Create zip
      run: |
        cp out/msm-5.4-lahaina-nqgki/dist/Image ak3/
        cat out/msm-5.4-lahaina-nqgki/dist/*.dtb > ak3/dtb
        cp out/msm-5.4-lahaina-nqgki/dist/dtbo.img ak3/
        cd ak3/ && zip -r9 eva-lemonade-$(/bin/date -u '+%d%m%Y%I%M')-gcc.zip * -x .git README.md ./*/placeholder
        cd ../
    - uses: actions/upload-artifact@main
      with:
       name: release-zip
       path: ak3/*.zip

  build-martini-clang:
    needs: [bot-notify-ci]
    runs-on: ubuntu-latest

    steps:
    - name: Setup repo
      run: sudo apt update -y && sudo apt install -y repo elfutils libarchive-tools
    - name: Repo sync
      run: |
        repo init -u https://github.com/mvaisakh/android_kernel_manifest -b eva-oneplus-5.4 --depth=1
        repo sync --no-tags --no-clone-bundle -j$(nproc --all)
    - name: Sync Clang
      run: |
        mkdir -p prebuilts-master/clang/host/linux-x86/clang-r450784d/
        cd prebuilts-master/clang/host/linux-x86/clang-r450784d/
        curl -LO "https://raw.githubusercontent.com/Neutron-Toolchains/antman/main/antman"
        bash antman -S=latest
        bash antman --patch=glibc
    - name: Clang Build
      run: |
        sed -i s/build-user/mvaisakh/g build/_setup_env.sh
        sed -i s/build-host/statixos/g build/_setup_env.sh
        BUILD_CONFIG=kernel/msm-5.4/build.config.msm.lahaina VARIANT=nqgki DEVICE=9RT LTO=thin BUILD_KERNEL=1 build/build.sh
    - name: Create zip
      run: |
        cp out/msm-5.4-lahaina-nqgki/dist/Image ak3/
        cat out/msm-5.4-lahaina-nqgki/dist/*.dtb > ak3/dtb
        cp out/msm-5.4-lahaina-nqgki/dist/dtbo.img ak3/
        cd ak3/ && zip -r9 eva-martini-$(/bin/date -u '+%d%m%Y%I%M')-clang.zip * -x .git README.md ./*/placeholder
        cd ../
    - uses: actions/upload-artifact@main
      with:
       name: release-zip
       path: ak3/*.zip

  build-martini-gcc:
    needs: [bot-notify-ci]
    runs-on: ubuntu-latest

    steps:
    - name: Setup repo
      run: sudo apt update -y && sudo apt install -y repo elfutils
    - name: Repo sync
      run: |
        repo init -u https://github.com/mvaisakh/android_kernel_manifest -b eva-oneplus-5.4 --depth=1
        repo sync --no-tags --no-clone-bundle -j$(nproc --all)
    - name: GCC Build
      run: |
        sed -i s/build-user/mvaisakh/g build/_setup_env.sh
        sed -i s/build-host/statixos/g build/_setup_env.sh
        BUILD_CONFIG=kernel/msm-5.4/build.config.msm.lahaina DEVICE=9RT VARIANT=nqgki COMPILER=gcc GCC_LTO=1 BUILD_KERNEL=1 build/build.sh
    - name: Create zip
      run: |
        cp out/msm-5.4-lahaina-nqgki/dist/Image ak3/
        cat out/msm-5.4-lahaina-nqgki/dist/*.dtb > ak3/dtb
        cp out/msm-5.4-lahaina-nqgki/dist/dtbo.img ak3/
        cd ak3/ && zip -r9 eva-martini-$(/bin/date -u '+%d%m%Y%I%M')-gcc.zip * -x .git README.md ./*/placeholder
        cd ../
    - uses: actions/upload-artifact@main
      with:
       name: release-zip
       path: ak3/*.zip

  build-lunaa-clang:
    needs: [bot-notify-ci]
    runs-on: ubuntu-latest

    steps:
    - name: Setup repo
      run: sudo apt update -y && sudo apt install -y repo elfutils libarchive-tools
    - name: Repo sync
      run: |
        repo init -u https://github.com/mvaisakh/android_kernel_manifest -b eva-oneplus-5.4 --depth=1
        repo sync --no-tags --no-clone-bundle -j$(nproc --all)
    - name: Sync Clang
      run: |
        mkdir -p prebuilts-master/clang/host/linux-x86/clang-r416183b/
        cd prebuilts-master/clang/host/linux-x86/clang-r416183b/
        curl -LO "https://raw.githubusercontent.com/Neutron-Toolchains/antman/main/antman"
        bash antman -S=latest
        bash antman --patch=glibc
    - name: Clang Build
      run: |
        sed -i s/build-user/mvaisakh/g build/_setup_env.sh
        sed -i s/build-host/statixos/g build/_setup_env.sh
        BUILD_CONFIG=kernel/msm-5.4/build.config.msm.lahaina VARIANT=nqgki DEVICE=LUNAA LTO=thin BUILD_KERNEL=1 build/build.sh
    - name: Create zip
      run: |
        cp out/msm-5.4-lahaina-nqgki/dist/Image ak3/
        cat out/msm-5.4-lahaina-nqgki/dist/*.dtb > ak3/dtb
        cp out/msm-5.4-lahaina-nqgki/dist/dtbo.img ak3/
        cd ak3/ && zip -r9 eva-lunaa-$(/bin/date -u '+%d%m%Y%I%M')-clang.zip * -x .git README.md ./*/placeholder
        cd ../
    - uses: actions/upload-artifact@main
      with:
       name: release-zip
       path: ak3/*.zip

  build-lunaa-gcc:
    needs: [bot-notify-ci]
    runs-on: ubuntu-latest

    steps:
    - name: Setup repo
      run: sudo apt update -y && sudo apt install -y repo elfutils
    - name: Repo sync
      run: |
        repo init -u https://github.com/mvaisakh/android_kernel_manifest -b eva-oneplus-5.4 --depth=1
        repo sync --no-tags --no-clone-bundle -j$(nproc --all)
    - name: GCC Build
      run: |
        sed -i s/build-user/mvaisakh/g build/_setup_env.sh
        sed -i s/build-host/statixos/g build/_setup_env.sh
        BUILD_CONFIG=kernel/msm-5.4/build.config.msm.lahaina DEVICE=LUNAA VARIANT=nqgki COMPILER=gcc GCC_LTO=1 BUILD_KERNEL=1 build/build.sh
    - name: Create zip
      run: |
        cp out/msm-5.4-lahaina-nqgki/dist/Image ak3/
        cat out/msm-5.4-lahaina-nqgki/dist/*.dtb > ak3/dtb
        cp out/msm-5.4-lahaina-nqgki/dist/dtbo.img ak3/
        cd ak3/ && zip -r9 eva-lunaa-$(/bin/date -u '+%d%m%Y%I%M')-gcc.zip * -x .git README.md ./*/placeholder
        cd ../
    - uses: actions/upload-artifact@main
      with:
       name: release-zip
       path: ak3/*.zip

  publish-release:
    needs: [build-lemonade-clang,build-lemonade-gcc,build-martini-clang,build-martini-gcc,build-lunaa-clang,build-lunaa-gcc]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Restoring artifacts
      uses: actions/download-artifact@main
      with:
        name: release-zip
        path: ${{ github.workspace }}
    - name: Release Tag
      id: release_tag
      run: echo "TAG_NAME=$(date -u +%d%m%Y%I%M)" >> $GITHUB_ENV
    - name: Create Release
      run: gh release create ${{ env.TAG_NAME }} --generate-notes -p *.zip
    - name: Release Check
      run: gh release list -L 1 > list
    - name: Prepare release message
      run: gh release view $(cat list | awk '{ print substr( $0, 1, length($0)-45 ) }') > release-text
    - name: Send message
      run: curl -s -X POST ${{ env.BOT_MSG_URL }} -d chat_id=${{ env.CHAT_ID }} -d "disable_web_page_preview=true" -d "parse_mode=html" -d text="<b>New build for OnePlus 9 Series</b> %0A$(cat release-text | sed '1d;3d;4d;6d;7d;9d;10d;11d;12d;')"
